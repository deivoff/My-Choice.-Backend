upstream api {
    zone local 64k;
    server localhost:7000;
    keepalive 20;
}

server {
    server_name www.xn--72-9kcd8arods1i.xn--p1ai;
    return 301 $scheme://xn--72-9kcd8arods1i.xn--p1ai$request_uri;
}

server {
    listen 80;

    server_name xn--72-9kcd8arods1i.xn--p1ai;

    index index.html;

    location / {
        root /var/www/moi-vibor.rf/frontend/build;

        try_files $uri @prerender;
    }

    location /oauth/ {
        proxy_pass http://api/oauth/;
    }

    location /assets {
        root /var/www/moi-vibor.rf/backend/dist;

        try_files $uri @static;
    }

    location /static {
        root /var/www/moi-vibor.rf/frontend/build;

        try_files $request_uri @static;
    }

    location @static {
        # disable cache
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        #try_files /home/user/my-choice/backend/dist/$uri $uri =404;
    }

    location @prerender {
        #proxy_set_header X-Prerender-Token YOUR_TOKEN;
        root /home/user/my-choice/frontend/build;

        set $prerender 0;

        if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest\/0\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {
            rewrite .* /$scheme://$host$request_uri? break;
            proxy_pass http://api$request_uri;
            #proxy_pass http://service.prerender.io;
        }
        if ($prerender = 0) {
            rewrite .* /index.html break;
        }
    }

    location /graphql {
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_pass http://api/graphql;
    }
}


server {
    if ($host = xn--72-9kcd8arods1i.xn--p1ai) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name xn--72-9kcd8arods1i.xn--p1ai;
    return 404; # managed by Certbot


}
